{"ast":null,"code":"var _jsxFileName = \"/Users/victoriadynak/Desktop/CSCI_WD/final-client/src/components/containers/CampusContainer.js\";\n/*==================================================\nCampusContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { fetchCampusThunk, deleteCampusThunk, editStudentThunk } from \"../../store/thunks\";\nimport { CampusView } from \"../views\";\nclass CampusContainer extends Component {\n  constructor(props) {\n    super(props);\n    // Handle removing student from campus\n    this.handleRemoveStudent = async studentId => {\n      try {\n        if (window.confirm('Remove this student from the campus?')) {\n          await this.props.editStudent({\n            id: studentId,\n            campusId: null\n          });\n          // Refresh campus data\n          this.props.fetchCampus(this.props.match.params.id);\n        }\n      } catch (error) {\n        console.error(\"Error removing student:\", error);\n      }\n    };\n    // Handle campus deletion\n    this.handleDelete = async campusId => {\n      try {\n        if (window.confirm('Are you sure you want to delete this campus?')) {\n          await this.props.handleDelete(campusId);\n          this.setState({\n            redirect: true\n          });\n        }\n      } catch (error) {\n        console.error(\"Error deleting campus:\", error);\n      }\n    };\n    this.state = {\n      redirect: false // Initialize state here\n    };\n  }\n  componentDidMount() {\n    // Get campus ID from URL (API link)\n    this.props.fetchCampus(this.props.match.params.id);\n  }\n  render() {\n    // Check if state exists before accessing redirect\n    if (this.state && this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/campuses\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 14\n        }\n      });\n    }\n\n    // Add loading state\n    if (!this.props.campus) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CampusView, {\n      campus: this.props.campus,\n      handleDelete: this.handleDelete,\n      handleRemoveStudent: this.handleRemoveStudent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\n// Map state to props\nconst mapState = state => {\n  return {\n    campus: state.campus\n  };\n};\n\n// Map dispatch to props\nconst mapDispatch = dispatch => {\n  return {\n    fetchCampus: id => dispatch(fetchCampusThunk(id)),\n    handleDelete: id => dispatch(deleteCampusThunk(id)),\n    editStudent: student => dispatch(editStudentThunk(student))\n  };\n};\nexport default connect(mapState, mapDispatch)(CampusContainer);","map":{"version":3,"names":["Header","React","Component","connect","Redirect","fetchCampusThunk","deleteCampusThunk","editStudentThunk","CampusView","CampusContainer","constructor","props","handleRemoveStudent","studentId","window","confirm","editStudent","id","campusId","fetchCampus","match","params","error","console","handleDelete","setState","redirect","state","componentDidMount","render","createElement","to","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","campus","mapState","mapDispatch","dispatch","student"],"sources":["/Users/victoriadynak/Desktop/CSCI_WD/final-client/src/components/containers/CampusContainer.js"],"sourcesContent":["/*==================================================\nCampusContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { \n  fetchCampusThunk, \n  deleteCampusThunk,\n  editStudentThunk \n} from \"../../store/thunks\";\nimport { CampusView } from \"../views\";\n\nclass CampusContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,  // Initialize state here\n    };\n  }\n\n  componentDidMount() {\n    // Get campus ID from URL (API link)\n    this.props.fetchCampus(this.props.match.params.id);\n  }\n\n  // Handle removing student from campus\n  handleRemoveStudent = async (studentId) => {\n    try {\n      if (window.confirm('Remove this student from the campus?')) {\n        await this.props.editStudent({\n          id: studentId,\n          campusId: null\n        });\n        // Refresh campus data\n        this.props.fetchCampus(this.props.match.params.id);\n      }\n    } catch (error) {\n      console.error(\"Error removing student:\", error);\n    }\n  }\n\n  // Handle campus deletion\n  handleDelete = async (campusId) => {\n    try {\n      if (window.confirm('Are you sure you want to delete this campus?')) {\n        await this.props.handleDelete(campusId);\n        this.setState({ redirect: true });\n      }\n    } catch (error) {\n      console.error(\"Error deleting campus:\", error);\n    }\n  }\n\n  render() {\n    // Check if state exists before accessing redirect\n    if (this.state && this.state.redirect) {\n      return <Redirect to=\"/campuses\" />;\n    }\n\n    // Add loading state\n    if (!this.props.campus) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <div>\n        <Header />\n        <CampusView \n          campus={this.props.campus}\n          handleDelete={this.handleDelete}\n          handleRemoveStudent={this.handleRemoveStudent}\n        />\n      </div>\n    );\n  }\n}\n\n// Map state to props\nconst mapState = (state) => {\n  return {\n    campus: state.campus,\n  };\n};\n\n// Map dispatch to props\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n    handleDelete: (id) => dispatch(deleteCampusThunk(id)),\n    editStudent: (student) => dispatch(editStudentThunk(student))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(CampusContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}