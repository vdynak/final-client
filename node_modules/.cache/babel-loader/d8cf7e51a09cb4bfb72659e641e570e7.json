{"ast":null,"code":"var _jsxFileName = \"/Users/victoriadynak/Desktop/CSCI_WD/final-client/src/components/containers/EditStudentContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStudentThunk, editStudentThunk } from '../../store/thunks';\nimport { EditStudentView } from '../views';\nimport { Redirect } from 'react-router-dom';\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.validateField = (name, value) => {\n      let error = \"\";\n      switch (name) {\n        case \"firstname\":\n        case \"lastname\":\n          if (!value) error = \"This field is required\";else if (value.length < 2) error = \"Must be at least 2 characters\";\n          break;\n        case \"email\":\n          const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n          if (!value) error = \"Email is required\";else if (!emailRegex.test(value)) error = \"Invalid email format\";\n          break;\n        case \"gpa\":\n          if (value) {\n            const gpaValue = parseFloat(value);\n            if (isNaN(gpaValue) || gpaValue < 0 || gpaValue > 4) {\n              error = \"GPA must be between 0.0 and 4.0\";\n            }\n          }\n          break;\n        case \"imageURL\":\n          if (value) {\n            try {\n              new URL(value);\n            } catch {\n              error = \"Invalid URL format\";\n            }\n          }\n          break;\n        default:\n          break;\n      }\n      return error;\n    };\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState(prevState => ({\n        [name]: value,\n        errors: {\n          ...prevState.errors,\n          [name]: this.validateField(name, value)\n        }\n      }));\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n\n      // Validate all fields\n      const errors = {\n        firstname: this.validateField(\"firstname\", this.state.firstname),\n        lastname: this.validateField(\"lastname\", this.state.lastname),\n        email: this.validateField(\"email\", this.state.email),\n        gpa: this.validateField(\"gpa\", this.state.gpa),\n        imageURL: this.validateField(\"imageURL\", this.state.imageURL)\n      };\n\n      // Check if there are any errors\n      if (Object.values(errors).some(error => error)) {\n        this.setState({\n          errors\n        });\n        return;\n      }\n      try {\n        await this.props.editStudent({\n          id: this.props.student.id,\n          firstname: this.state.firstname,\n          lastname: this.state.lastname,\n          email: this.state.email,\n          imageURL: this.state.imageURL || null,\n          gpa: this.state.gpa ? parseFloat(this.state.gpa) : null,\n          campusId: this.state.campusId ? parseInt(this.state.campusId) : null\n        });\n        this.setState({\n          redirect: true\n        });\n      } catch (err) {\n        console.error(err);\n        this.setState(prevState => ({\n          errors: {\n            ...prevState.errors,\n            submit: \"Failed to update student\"\n          }\n        }));\n      }\n    };\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      imageURL: \"\",\n      gpa: \"\",\n      campusId: \"\",\n      errors: {\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        gpa: \"\",\n        imageURL: \"\"\n      },\n      redirect: false\n    };\n  }\n  componentDidMount() {\n    // Get student ID from URL\n    this.props.fetchStudent(this.props.match.params.id).then(() => {\n      const {\n        student\n      } = this.props;\n      this.setState({\n        firstname: student.firstname,\n        lastname: student.lastname,\n        email: student.email,\n        imageURL: student.imageURL || \"\",\n        gpa: student.gpa || \"\",\n        campusId: student.campusId || \"\"\n      });\n    });\n  }\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/student/${this.props.student.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 14\n        }\n      });\n    }\n    return /*#__PURE__*/React.createElement(EditStudentView, {\n      student: this.state.student,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      formData: this.state,\n      errors: this.state.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    });\n  }\n}\nconst mapState = state => ({\n  student: state.student\n});\nconst mapDispatch = dispatch => ({\n  fetchStudent: id => dispatch(fetchStudentThunk(id)),\n  editStudent: student => dispatch(editStudentThunk(student))\n});\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"names":["React","Component","connect","fetchStudentThunk","editStudentThunk","EditStudentView","Redirect","EditStudentContainer","constructor","props","validateField","name","value","error","length","emailRegex","test","gpaValue","parseFloat","isNaN","URL","handleChange","event","target","setState","prevState","errors","handleSubmit","preventDefault","firstname","state","lastname","email","gpa","imageURL","Object","values","some","editStudent","id","student","campusId","parseInt","redirect","err","console","submit","componentDidMount","fetchStudent","match","params","then","render","createElement","to","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","formData","mapState","mapDispatch","dispatch"],"sources":["/Users/victoriadynak/Desktop/CSCI_WD/final-client/src/components/containers/EditStudentContainer.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStudentThunk, editStudentThunk } from '../../store/thunks';\nimport { EditStudentView } from '../views';\nimport { Redirect } from 'react-router-dom';\n\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      imageURL: \"\",\n      gpa: \"\",\n      campusId: \"\",\n      errors: {\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        gpa: \"\",\n        imageURL: \"\"\n      },\n      redirect: false\n    };\n  }\n\n  componentDidMount() {\n    // Get student ID from URL\n    this.props.fetchStudent(this.props.match.params.id).then(() => {\n      const { student } = this.props;\n      this.setState({\n        firstname: student.firstname,\n        lastname: student.lastname,\n        email: student.email,\n        imageURL: student.imageURL || \"\",\n        gpa: student.gpa || \"\",\n        campusId: student.campusId || \"\"\n      });\n    });\n  }\n\n  validateField = (name, value) => {\n    let error = \"\";\n    switch (name) {\n      case \"firstname\":\n      case \"lastname\":\n        if (!value) error = \"This field is required\";\n        else if (value.length < 2) error = \"Must be at least 2 characters\";\n        break;\n      \n      case \"email\":\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!value) error = \"Email is required\";\n        else if (!emailRegex.test(value)) error = \"Invalid email format\";\n        break;\n      \n      case \"gpa\":\n        if (value) {\n          const gpaValue = parseFloat(value);\n          if (isNaN(gpaValue) || gpaValue < 0 || gpaValue > 4) {\n            error = \"GPA must be between 0.0 and 4.0\";\n          }\n        }\n        break;\n      \n      case \"imageURL\":\n        if (value) {\n          try {\n            new URL(value);\n          } catch {\n            error = \"Invalid URL format\";\n          }\n        }\n        break;\n      \n      default:\n        break;\n    }\n    return error;\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    \n    this.setState(prevState => ({\n      [name]: value,\n      errors: {\n        ...prevState.errors,\n        [name]: this.validateField(name, value)\n      }\n    }));\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    \n    // Validate all fields\n    const errors = {\n      firstname: this.validateField(\"firstname\", this.state.firstname),\n      lastname: this.validateField(\"lastname\", this.state.lastname),\n      email: this.validateField(\"email\", this.state.email),\n      gpa: this.validateField(\"gpa\", this.state.gpa),\n      imageURL: this.validateField(\"imageURL\", this.state.imageURL)\n    };\n\n    // Check if there are any errors\n    if (Object.values(errors).some(error => error)) {\n      this.setState({ errors });\n      return;\n    }\n\n    try {\n      await this.props.editStudent({\n        id: this.props.student.id,\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        imageURL: this.state.imageURL || null,\n        gpa: this.state.gpa ? parseFloat(this.state.gpa) : null,\n        campusId: this.state.campusId ? parseInt(this.state.campusId) : null\n      });\n      \n      this.setState({ redirect: true });\n    } catch (err) {\n      console.error(err);\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          submit: \"Failed to update student\"\n        }\n      }));\n    }\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={`/student/${this.props.student.id}`} />;\n    }\n\n    return (\n      <EditStudentView \n        student={this.state.student}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n        formData={this.state}\n        errors={this.state.errors}\n      />\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  student: state.student\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n  editStudent: (student) => dispatch(editStudentThunk(student))\n});\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}