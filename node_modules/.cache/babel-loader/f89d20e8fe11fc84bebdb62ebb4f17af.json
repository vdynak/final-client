{"ast":null,"code":"var _jsxFileName = \"/Users/victoriadynak/Desktop/CSCI_WD/final-client/src/components/containers/AllCampusesContainer.js\";\n/*==================================================\n/src/components/containers\\AllCampusesContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport React from 'react';\nimport Header from './Header';\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllCampusesThunk, deleteCampusThunk } from \"../../store/thunks\";\nimport { AllCampusesView } from \"../views\";\nclass AllCampusesContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n  componentDidMount() {\n    console.log(\"Component mounting, props:\", this.props);\n    this.props.fetchAllCampuses();\n  }\n  handleDelete(campusId) {\n    console.log(\"Deleting campus:\", campusId);\n    this.props.handleDelete(campusId);\n  }\n  render() {\n    console.log(\"Rendering with campuses:\", this.props.allCampuses);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AllCampusesView, {\n      allCampuses: this.props.allCampuses,\n      handleDelete: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"allCampuses\".\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\nconst mapState = state => {\n  return {\n    allCampuses: state.allCampuses // Get the State object from Reducer \"allCampuses\"\n  };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n    handleDelete: campusId => dispatch(deleteCampusThunk(campusId))\n  };\n};\n\n// Type check props;\nAllCampusesContainer.propTypes = {\n  allCampuses: PropTypes.array.isRequired,\n  fetchAllCampuses: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired\n};\n\n// Export store-connected container by default\n// AllCampusesContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState, mapDispatch)(AllCampusesContainer);","map":{"version":3,"names":["React","Header","Component","PropTypes","connect","fetchAllCampusesThunk","deleteCampusThunk","AllCampusesView","AllCampusesContainer","constructor","props","handleDelete","bind","componentDidMount","console","log","fetchAllCampuses","campusId","render","allCampuses","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapState","state","mapDispatch","dispatch","propTypes","array","isRequired","func"],"sources":["/Users/victoriadynak/Desktop/CSCI_WD/final-client/src/components/containers/AllCampusesContainer.js"],"sourcesContent":["/*==================================================\n/src/components/containers\\AllCampusesContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport React from 'react'; \nimport Header from './Header';\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllCampusesThunk, deleteCampusThunk } from \"../../store/thunks\";\nimport { AllCampusesView } from \"../views\";\n\nclass AllCampusesContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n  componentDidMount() {\n    console.log(\"Component mounting, props:\", this.props);\n    this.props.fetchAllCampuses();\n  }\n  handleDelete(campusId) {\n    console.log(\"Deleting campus:\", campusId);\n    this.props.handleDelete(campusId);\n  }\n\n  render() {\n    console.log(\"Rendering with campuses:\", this.props.allCampuses);\n    return (\n      <div>\n        <Header />\n        <AllCampusesView\n          allCampuses={this.props.allCampuses}\n          handleDelete={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"allCampuses\".\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\nconst mapState = (state) => {\n  return {\n    allCampuses: state.allCampuses,  // Get the State object from Reducer \"allCampuses\"\n  };\n};  \n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n    handleDelete: (campusId) => dispatch(deleteCampusThunk(campusId))\n  };\n};\n\n// Type check props;\nAllCampusesContainer.propTypes = {\n  allCampuses: PropTypes.array.isRequired,\n  fetchAllCampuses: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\n// Export store-connected container by default\n// AllCampusesContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState, mapDispatch)(AllCampusesContainer);"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,qBAAqB,EAAEC,iBAAiB,QAAQ,oBAAoB;AAC7E,SAASC,eAAe,QAAQ,UAAU;AAE1C,MAAMC,oBAAoB,SAASN,SAAS,CAAC;EAC3CO,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EAClD;EACAC,iBAAiBA,CAAA,EAAG;IAClBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAACL,KAAK,CAAC;IACrD,IAAI,CAACA,KAAK,CAACM,gBAAgB,CAAC,CAAC;EAC/B;EACAL,YAAYA,CAACM,QAAQ,EAAE;IACrBH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEE,QAAQ,CAAC;IACzC,IAAI,CAACP,KAAK,CAACC,YAAY,CAACM,QAAQ,CAAC;EACnC;EAEAC,MAAMA,CAAA,EAAG;IACPJ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAACL,KAAK,CAACS,WAAW,CAAC;IAC/D,oBACEnB,KAAA,CAAAoB,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACE1B,KAAA,CAAAoB,aAAA,CAACnB,MAAM;MAAAoB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,eACV1B,KAAA,CAAAoB,aAAA,CAACb,eAAe;MACdY,WAAW,EAAE,IAAI,CAACT,KAAK,CAACS,WAAY;MACpCR,YAAY,EAAE,IAAI,CAACA,YAAa;MAAAU,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACjC,CACE,CAAC;EAEV;AACF;;AAEA;AACA;AACA;AACA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,OAAO;IACLT,WAAW,EAAES,KAAK,CAACT,WAAW,CAAG;EACnC,CAAC;AACH,CAAC;AACD;AACA;AACA,MAAMU,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAO;IACLd,gBAAgB,EAAEA,CAAA,KAAMc,QAAQ,CAACzB,qBAAqB,CAAC,CAAC,CAAC;IACzDM,YAAY,EAAGM,QAAQ,IAAKa,QAAQ,CAACxB,iBAAiB,CAACW,QAAQ,CAAC;EAClE,CAAC;AACH,CAAC;;AAED;AACAT,oBAAoB,CAACuB,SAAS,GAAG;EAC/BZ,WAAW,EAAEhB,SAAS,CAAC6B,KAAK,CAACC,UAAU;EACvCjB,gBAAgB,EAAEb,SAAS,CAAC+B,IAAI,CAACD,UAAU;EAC3CtB,YAAY,EAAER,SAAS,CAAC+B,IAAI,CAACD;AAC/B,CAAC;;AAED;AACA;AACA;AACA,eAAe7B,OAAO,CAACuB,QAAQ,EAAEE,WAAW,CAAC,CAACrB,oBAAoB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}