{"ast":null,"code":"var _jsxFileName = \"/Users/victoriadynak/Desktop/CSCI_WD/final-client/src/components/views/NewCampusView.js\";\n/*==================================================\nNewCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a form to add a new campus.\n================================================== */\nimport React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/NewCampusView.css';\nconst NewCampusView = props => {\n  const [formData, setFormData] = useState({\n    name: '',\n    address: '',\n    description: '',\n    imageUrl: ''\n  });\n  const [errors, setErrors] = useState({\n    name: '',\n    address: '',\n    description: '',\n    imageUrl: ''\n  });\n\n  // Validation function\n  const validateField = (name, value) => {\n    switch (name) {\n      case 'name':\n        return value.length < 2 ? 'Name must be at least 2 characters long' : '';\n      case 'address':\n        return value.length < 5 ? 'Address must be at least 5 characters long' : '';\n      case 'imageUrl':\n        if (!value) return ''; // Optional field\n        const urlPattern = /^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/;\n        return !urlPattern.test(value) ? 'Please enter a valid URL' : '';\n      default:\n        return '';\n    }\n  };\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Update form data\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Validate and set errors\n    setErrors(prev => ({\n      ...prev,\n      [name]: validateField(name, value)\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Submitting image URL:', formData.imageURL);\n\n    // Validate all fields before submission\n    const newErrors = {\n      name: validateField('name', formData.name),\n      address: validateField('address', formData.address),\n      imageUrl: validateField('imageUrl', formData.imageUrl)\n    };\n\n    // Check if there are any errors\n    if (Object.values(newErrors).some(error => error !== '')) {\n      setErrors(newErrors);\n      return;\n    }\n\n    // If no errors, submit the form\n    props.handleSubmit(formData);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-campus-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Add New Campus\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"new-campus-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Campus Name:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    value: formData.name,\n    onChange: handleChange,\n    className: errors.name ? 'error' : '',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), errors.name && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 27\n    }\n  }, errors.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Address:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"address\",\n    name: \"address\",\n    value: formData.address,\n    onChange: handleChange,\n    className: errors.address ? 'error' : '',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), errors.address && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 30\n    }\n  }, errors.address)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Description:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    name: \"description\",\n    value: formData.description,\n    onChange: handleChange,\n    rows: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"imageUrl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Image URL:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"imageUrl\",\n    name: \"imageUrl\",\n    value: formData.imageUrl,\n    onChange: handleChange,\n    className: errors.imageUrl ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), errors.imageUrl && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 31\n    }\n  }, errors.imageUrl)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: Object.values(errors).some(error => error !== ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"Add Campus\")));\n};\nNewCampusView.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\nexport default NewCampusView;","map":{"version":3,"names":["React","useState","PropTypes","NewCampusView","props","formData","setFormData","name","address","description","imageUrl","errors","setErrors","validateField","value","length","urlPattern","test","handleChange","e","target","prev","handleSubmit","preventDefault","console","log","imageURL","newErrors","Object","values","some","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","rows","disabled","propTypes","func","isRequired"],"sources":["/Users/victoriadynak/Desktop/CSCI_WD/final-client/src/components/views/NewCampusView.js"],"sourcesContent":["/*==================================================\nNewCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a form to add a new campus.\n================================================== */\nimport React from 'react'; \nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/NewCampusView.css';\n\nconst NewCampusView = (props) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    address: '',\n    description: '',\n    imageUrl: ''\n  });\n\n  const [errors, setErrors] = useState({\n    name: '',\n    address: '',\n    description: '',\n    imageUrl: ''\n  });\n\n  // Validation function\n  const validateField = (name, value) => {\n    switch (name) {\n      case 'name':\n        return value.length < 2 ? 'Name must be at least 2 characters long' : '';\n      case 'address':\n        return value.length < 5 ? 'Address must be at least 5 characters long' : '';\n      case 'imageUrl':\n        if (!value) return ''; // Optional field\n        const urlPattern = /^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/;\n        return !urlPattern.test(value) ? 'Please enter a valid URL' : '';\n      default:\n        return '';\n    }\n  };\n\n  // Handle input changes\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    \n    // Update form data\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Validate and set errors\n    setErrors(prev => ({\n      ...prev,\n      [name]: validateField(name, value)\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('Submitting image URL:', formData.imageURL)\n    \n    // Validate all fields before submission\n    const newErrors = {\n      name: validateField('name', formData.name),\n      address: validateField('address', formData.address),\n      imageUrl: validateField('imageUrl', formData.imageUrl)\n    };\n\n    // Check if there are any errors\n    if (Object.values(newErrors).some(error => error !== '')) {\n      setErrors(newErrors);\n      return;\n    }\n\n    // If no errors, submit the form\n    props.handleSubmit(formData);\n  };\n\n  return (\n    <div className=\"new-campus-container\">\n      <h1>Add New Campus</h1>\n      \n      <form onSubmit={handleSubmit} className=\"new-campus-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">\n            Campus Name:\n            <span className=\"required\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            className={errors.name ? 'error' : ''}\n            required\n          />\n          {errors.name && <span className=\"error-message\">{errors.name}</span>}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"address\">\n            Address:\n            <span className=\"required\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            id=\"address\"\n            name=\"address\"\n            value={formData.address}\n            onChange={handleChange}\n            className={errors.address ? 'error' : ''}\n            required\n          />\n          {errors.address && <span className=\"error-message\">{errors.address}</span>}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description:</label>\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            value={formData.description}\n            onChange={handleChange}\n            rows=\"4\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"imageUrl\">Image URL:</label>\n          <input\n            type=\"text\"\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            value={formData.imageUrl}\n            onChange={handleChange}\n            className={errors.imageUrl ? 'error' : ''}\n          />\n          {errors.imageUrl && <span className=\"error-message\">{errors.imageUrl}</span>}\n        </div>\n\n        <button \n          type=\"submit\"\n          disabled={Object.values(errors).some(error => error !== '')}\n        >\n          Add Campus\n        </button>\n      </form>\n    </div>\n  );\n};\n\nNewCampusView.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default NewCampusView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}