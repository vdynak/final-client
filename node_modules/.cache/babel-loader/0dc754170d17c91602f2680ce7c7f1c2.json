{"ast":null,"code":"/*==================================================\n/src/store/thunks.js\n\nIt contains all Thunk Creators and Thunks.\n================================================== */\nimport axios from 'axios';\nimport * as ac from './actions/actionCreators'; // Import Action Creators (\"ac\" keyword Action Creator)\n//const axios = require('axios');\n\n//All Campuses\n// THUNK CREATOR:\nexport const fetchAllCampusesThunk = () => async dispatch => {\n  try {\n    console.log(\"Starting fetch...\");\n    let res = await axios.get(`/api/campuses`);\n    console.log(\"API Response:\", res);\n    console.log(\"Campuses data:\", res.data);\n    dispatch(ac.fetchAllCampuses(res.data));\n  } catch (err) {\n    console.error(\"Error fetching campuses:\", err);\n  }\n};\n\n// Single Campus\n// THUNK CREATOR:\nexport const fetchCampusThunk = id => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get a student data (based on \"id\")from database\n    let res = await axios.get(`/api/campuses/${id}`);\n    dispatch(ac.fetchCampus(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const addCampusThunk = campus => async dispatch => {\n  try {\n    console.log(\"Sending campus data:\", campus); // Debug log\n\n    // Make sure we're using the full path\n    let res = await axios.post('/api/campuses', campus);\n    console.log(\"Response from server:\", res.data); // Debug log\n\n    // Dispatch both actions\n    dispatch(ac.addCampus(res.data));\n    dispatch(fetchAllCampusesThunk()); // Fetch all campuses to update the list\n\n    return res.data;\n  } catch (err) {\n    console.error(\"Error in addCampusThunk:\", err.response ? err.response.data : err);\n    throw err;\n  }\n};\nexport const deleteCampusThunk = id => async dispatch => {\n  try {\n    await axios.delete(`/api/campuses/${id}`);\n    dispatch({\n      type: \"DELETE_CAMPUS\",\n      payload: id\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const editCampusThunk = campus => async dispatch => {\n  // The THUNK\n  try {\n    // API \"put\" call to update campus data in database\n    let res = await axios.put(`/api/campuses/${campus.id}`, campus);\n    // Call Action Creator to return Action object\n    dispatch(ac.editCampus(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// All Students\n// THUNK CREATOR:\nexport const fetchAllStudentsThunk = () => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get \"students\" data from database\n    let res = await axios.get(`/api/students`);\n    // Call Action Creator to return Action object (type + payload with \"students\" data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.fetchAllStudents(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Add Student\nexport const addStudentThunk = student => async dispatch => {\n  try {\n    // Log the request data\n    console.log(\"Sending student data:\", student);\n\n    // Make the API call\n    let res = await axios.post(`/api/students`, student);\n\n    // Log the response\n    console.log(\"Server response:\", res.data);\n\n    // Dispatch action with the new student data\n    dispatch(ac.addStudent(res.data));\n\n    // Return the new student data\n    return res.data;\n  } catch (err) {\n    // Log the full error\n    console.error(\"Error in addStudentThunk:\", err.response ? err.response.data : err);\n    return null;\n  }\n};\n\n// Delete Student\n// THUNK CREATOR:\nexport const deleteStudentThunk = studentId => async dispatch => {\n  // The THUNK\n  try {\n    // API \"delete\" call to delete student (based on \"studentID\") from database\n    await axios.delete(`/api/students/${studentId}`);\n    // Delete successful so change state with dispatch\n    dispatch(ac.deleteStudent(studentId));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Edit Student\n// THUNK CREATOR:\nexport const editStudentThunk = student => async dispatch => {\n  // The THUNK\n  try {\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\n    let updatedStudent = await axios.put(`/api/students/${student.id}`, student);\n    // Update successful so change state with dispatch\n    dispatch(ac.editStudent(updatedStudent));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Single Student\n// THUNK CREATOR:\nexport const fetchStudentThunk = id => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get a specific student (based on \"id\") data from database\n    let res = await axios.get(`/api/students/${id}`);\n    // Call Action Creator to return Action object (type + payload with student data)\n    // Then dispatch the Action object to Reducer to display student data \n    dispatch(ac.fetchStudent(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"names":["axios","ac","fetchAllCampusesThunk","dispatch","console","log","res","get","data","fetchAllCampuses","err","error","fetchCampusThunk","id","fetchCampus","addCampusThunk","campus","post","addCampus","response","deleteCampusThunk","delete","type","payload","editCampusThunk","put","editCampus","fetchAllStudentsThunk","fetchAllStudents","addStudentThunk","student","addStudent","deleteStudentThunk","studentId","deleteStudent","editStudentThunk","updatedStudent","editStudent","fetchStudentThunk","fetchStudent"],"sources":["/Users/victoriadynak/Desktop/CSCI_WD/final-client/src/store/thunks.js"],"sourcesContent":["/*==================================================\n/src/store/thunks.js\n\nIt contains all Thunk Creators and Thunks.\n================================================== */\nimport axios from 'axios';\nimport * as ac from './actions/actionCreators';  // Import Action Creators (\"ac\" keyword Action Creator)\n//const axios = require('axios');\n\n//All Campuses\n// THUNK CREATOR:\nexport const fetchAllCampusesThunk = () => async (dispatch) => {\n  try {\n    console.log(\"Starting fetch...\");\n    let res = await axios.get(`/api/campuses`);\n    console.log(\"API Response:\", res);\n    console.log(\"Campuses data:\", res.data);\n    dispatch(ac.fetchAllCampuses(res.data));\n  } catch(err) {\n    console.error(\"Error fetching campuses:\", err);\n  }\n};\n\n// Single Campus\n// THUNK CREATOR:\nexport const fetchCampusThunk = (id) => async (dispatch) => {  // The THUNK\n  try {\n    // API \"get\" call to get a student data (based on \"id\")from database\n    let res = await axios.get(`/api/campuses/${id}`);  \n    dispatch(ac.fetchCampus(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const addCampusThunk = (campus) => async (dispatch) => {\n  try {\n    console.log(\"Sending campus data:\", campus); // Debug log\n    \n    // Make sure we're using the full path\n    let res = await axios.post('/api/campuses', campus);\n    \n    console.log(\"Response from server:\", res.data); // Debug log\n    \n    // Dispatch both actions\n    dispatch(ac.addCampus(res.data));\n    dispatch(fetchAllCampusesThunk()); // Fetch all campuses to update the list\n    \n    return res.data;\n  } catch(err) {\n    console.error(\"Error in addCampusThunk:\", err.response ? err.response.data : err);\n    throw err;\n  }\n};\n\nexport const deleteCampusThunk = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/campuses/${id}`);\n    dispatch({\n      type: \"DELETE_CAMPUS\",\n      payload: id\n    });\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const editCampusThunk = (campus) => async (dispatch) => {  // The THUNK\n  try {\n    // API \"put\" call to update campus data in database\n    let res = await axios.put(`/api/campuses/${campus.id}`, campus);\n    // Call Action Creator to return Action object\n    dispatch(ac.editCampus(res.data));\n    return res.data;\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// All Students\n// THUNK CREATOR:\nexport const fetchAllStudentsThunk = () => async (dispatch) => {  // The THUNK\n  try {\n    // API \"get\" call to get \"students\" data from database\n    let res = await axios.get(`/api/students`);  \n    // Call Action Creator to return Action object (type + payload with \"students\" data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.fetchAllStudents(res.data));  \n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Add Student\nexport const addStudentThunk = (student) => async (dispatch) => {\n  try {\n    // Log the request data\n    console.log(\"Sending student data:\", student);\n    \n    // Make the API call\n    let res = await axios.post(`/api/students`, student);\n    \n    // Log the response\n    console.log(\"Server response:\", res.data);\n\n    // Dispatch action with the new student data\n    dispatch(ac.addStudent(res.data));\n    \n    // Return the new student data\n    return res.data;\n  } catch(err) {\n    // Log the full error\n    console.error(\"Error in addStudentThunk:\", err.response ? err.response.data : err);\n    return null;\n  }\n};\n\n// Delete Student\n// THUNK CREATOR:\nexport const deleteStudentThunk = studentId => async dispatch => {  // The THUNK\n  try {\n    // API \"delete\" call to delete student (based on \"studentID\") from database\n    await axios.delete(`/api/students/${studentId}`);  \n    // Delete successful so change state with dispatch\n    dispatch(ac.deleteStudent(studentId));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Edit Student\n// THUNK CREATOR:\nexport const editStudentThunk = student => async dispatch => {  // The THUNK\n  try {\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\n    let updatedStudent = await axios.put(`/api/students/${student.id}`, student); \n    // Update successful so change state with dispatch\n    dispatch(ac.editStudent(updatedStudent));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Single Student\n// THUNK CREATOR:\nexport const fetchStudentThunk = id => async dispatch => {  // The THUNK\n  try {\n    // API \"get\" call to get a specific student (based on \"id\") data from database\n    let res = await axios.get(`/api/students/${id}`);  \n    // Call Action Creator to return Action object (type + payload with student data)\n    // Then dispatch the Action object to Reducer to display student data \n    dispatch(ac.fetchStudent(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}