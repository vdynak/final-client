{"ast":null,"code":"var _jsxFileName = \"/Users/victoriadynak/Desktop/CSCI_WD/final-client/src/components/containers/NewStudentContainer.js\";\n/*==================================================\nNewStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport NewStudentView from '../views/NewStudentView';\nimport { addStudentThunk } from '../../store/thunks';\nclass NewStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    // Get campusId from URL query parameters\n    this.validateField = (name, value) => {\n      let error = \"\";\n      switch (name) {\n        case \"firstname\":\n        case \"lastname\":\n          if (!value) error = \"This field is required\";else if (value.length < 2) error = \"Must be at least 2 characters\";\n          break;\n        case \"email\":\n          const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n          if (!value) error = \"Email is required\";else if (!emailRegex.test(value)) error = \"Invalid email format\";\n          break;\n        case \"gpa\":\n          if (value) {\n            const gpaValue = parseFloat(value);\n            if (isNaN(gpaValue) || gpaValue < 0 || gpaValue > 4) {\n              error = \"GPA must be between 0.0 and 4.0\";\n            }\n          }\n          break;\n        case \"imageURL\":\n          if (value) {\n            const urlRegex = /^https?:\\/\\/.+\\..+/;\n            if (!urlRegex.test(value)) {\n              error = \"Invalid URL format (must start with http:// or https://)\";\n            }\n          }\n          break;\n        default:\n          break;\n      }\n      return error;\n    };\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState(prevState => ({\n        [name]: value,\n        errors: {\n          ...prevState.errors,\n          [name]: this.validateField(name, value),\n          submit: \"\"\n        }\n      }));\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n\n      // Validate all fields\n      const errors = {\n        firstname: this.validateField(\"firstname\", this.state.firstname),\n        lastname: this.validateField(\"lastname\", this.state.lastname),\n        email: this.validateField(\"email\", this.state.email),\n        gpa: this.validateField(\"gpa\", this.state.gpa),\n        imageURL: this.validateField(\"imageURL\", this.state.imageURL)\n      };\n\n      // Check if there are any errors\n      if (Object.values(errors).some(error => error)) {\n        this.setState({\n          errors\n        });\n        return;\n      }\n      try {\n        const student = {\n          firstname: this.state.firstname,\n          lastname: this.state.lastname,\n          email: this.state.email,\n          imageURL: this.state.imageURL || null,\n          gpa: this.state.gpa ? parseFloat(this.state.gpa) : null,\n          campusId: this.state.campusId ? parseInt(this.state.campusId) : null\n        };\n        const newStudent = await this.props.addStudent(student);\n        if (newStudent && newStudent.id) {\n          this.setState({\n            redirect: true,\n            redirectId: newStudent.id\n          });\n        } else {\n          throw new Error(\"Failed to add student\");\n        }\n      } catch (err) {\n        console.error(err);\n        this.setState(prevState => ({\n          errors: {\n            ...prevState.errors,\n            submit: \"Failed to add student: \" + (err.message || \"Unknown error\")\n          }\n        }));\n      }\n    };\n    const searchParams = new URLSearchParams(this.props.location.search);\n    const campusId = searchParams.get('campusId');\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      imageURL: \"\",\n      gpa: \"\",\n      campusId: campusId || \"\",\n      // Initialize with campusId from URL if it exists\n      errors: {\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        gpa: \"\",\n        imageURL: \"\",\n        campusId: \"\",\n        submit: \"\"\n      },\n      redirect: false,\n      redirectId: null,\n      redirectToCampus: !!campusId // New flag to handle redirect back to campus\n    };\n  }\n  render() {\n    // Handle redirect based on whether we're adding to a campus or not\n    if (this.state.redirect) {\n      if (this.state.redirectToCampus) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: `/campus/${this.state.campusId}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 16\n          }\n        });\n      }\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/student/${this.state.redirectId}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 14\n        }\n      });\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(NewStudentView, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      errors: this.state.errors,\n      campusId: this.state.campusId // Pass campusId to view\n      ,\n      redirectToCampus: this.state.redirectToCampus // Pass redirect flag to view\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nconst mapDispatch = dispatch => ({\n  addStudent: student => dispatch(addStudentThunk(student))\n});\nexport default connect(null, mapDispatch)(NewStudentContainer);","map":{"version":3,"names":["React","Component","connect","Redirect","Header","NewStudentView","addStudentThunk","NewStudentContainer","constructor","props","validateField","name","value","error","length","emailRegex","test","gpaValue","parseFloat","isNaN","urlRegex","handleChange","event","target","setState","prevState","errors","submit","handleSubmit","preventDefault","firstname","state","lastname","email","gpa","imageURL","Object","values","some","student","campusId","parseInt","newStudent","addStudent","id","redirect","redirectId","Error","err","console","message","searchParams","URLSearchParams","location","search","get","redirectToCampus","render","createElement","to","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapDispatch","dispatch"],"sources":["/Users/victoriadynak/Desktop/CSCI_WD/final-client/src/components/containers/NewStudentContainer.js"],"sourcesContent":["/*==================================================\nNewStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport React from 'react'; \nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport NewStudentView from '../views/NewStudentView';\nimport { addStudentThunk } from '../../store/thunks';\n\nclass NewStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    // Get campusId from URL query parameters\n    const searchParams = new URLSearchParams(this.props.location.search);\n    const campusId = searchParams.get('campusId');\n    \n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      imageURL: \"\",\n      gpa: \"\",\n      campusId: campusId || \"\", // Initialize with campusId from URL if it exists\n      errors: {\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        gpa: \"\",\n        imageURL: \"\",\n        campusId: \"\",\n        submit: \"\"\n      },\n      redirect: false,\n      redirectId: null,\n      redirectToCampus: !!campusId // New flag to handle redirect back to campus\n    };\n  }\n\n  validateField = (name, value) => {\n    let error = \"\";\n    switch (name) {\n      case \"firstname\":\n      case \"lastname\":\n        if (!value) error = \"This field is required\";\n        else if (value.length < 2) error = \"Must be at least 2 characters\";\n        break;\n      \n      case \"email\":\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!value) error = \"Email is required\";\n        else if (!emailRegex.test(value)) error = \"Invalid email format\";\n        break;\n      \n      case \"gpa\":\n        if (value) {\n          const gpaValue = parseFloat(value);\n          if (isNaN(gpaValue) || gpaValue < 0 || gpaValue > 4) {\n            error = \"GPA must be between 0.0 and 4.0\";\n          }\n        }\n        break;\n      \n      case \"imageURL\":\n        if (value) {\n          const urlRegex = /^https?:\\/\\/.+\\..+/;\n          if (!urlRegex.test(value)) {\n            error = \"Invalid URL format (must start with http:// or https://)\";\n          }\n        }\n        break;\n      \n      default:\n        break;\n    }\n    return error;\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    \n    this.setState(prevState => ({\n      [name]: value,\n      errors: {\n        ...prevState.errors,\n        [name]: this.validateField(name, value),\n        submit: \"\"\n      }\n    }));\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Validate all fields\n    const errors = {\n      firstname: this.validateField(\"firstname\", this.state.firstname),\n      lastname: this.validateField(\"lastname\", this.state.lastname),\n      email: this.validateField(\"email\", this.state.email),\n      gpa: this.validateField(\"gpa\", this.state.gpa),\n      imageURL: this.validateField(\"imageURL\", this.state.imageURL)\n    };\n\n    // Check if there are any errors\n    if (Object.values(errors).some(error => error)) {\n      this.setState({ errors });\n      return;\n    }\n\n    try {\n      const student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        imageURL: this.state.imageURL || null,\n        gpa: this.state.gpa ? parseFloat(this.state.gpa) : null,\n        campusId: this.state.campusId ? parseInt(this.state.campusId) : null\n      };\n\n      const newStudent = await this.props.addStudent(student);\n\n      if (newStudent && newStudent.id) {\n        this.setState({\n          redirect: true,\n          redirectId: newStudent.id\n        });\n      } else {\n        throw new Error(\"Failed to add student\");\n      }\n    } catch (err) {\n      console.error(err);\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          submit: \"Failed to add student: \" + (err.message || \"Unknown error\")\n        }\n      }));\n    }\n  }\n\n  render() {\n    // Handle redirect based on whether we're adding to a campus or not\n    if (this.state.redirect) {\n      if (this.state.redirectToCampus) {\n        return <Redirect to={`/campus/${this.state.campusId}`} />;\n      }\n      return <Redirect to={`/student/${this.state.redirectId}`} />;\n    }\n\n    return (\n      <div>\n        <Header />\n        <NewStudentView \n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          errors={this.state.errors}\n          campusId={this.state.campusId} // Pass campusId to view\n          redirectToCampus={this.state.redirectToCampus} // Pass redirect flag to view\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatch = (dispatch) => ({\n  addStudent: (student) => dispatch(addStudentThunk(student))\n});\n\nexport default connect(null, mapDispatch)(NewStudentContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}